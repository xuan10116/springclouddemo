server:
  port: 9002
spring:
  application:
    name: order-product
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test?serverTimezone=GMT&useUnicode=true&characterEncoding=utf8
    username: root
    password: mysql8015
  jpa:
    database: MySQL
    show-sql: true
    open-in-view: true

#配置eureka server
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8000/eureka/,http://localhost:9000/eureka/
  instance:
    prefer-ip-address: true #使用ip地址进行注册
#
##修改ribbon的负载均衡策略，默认是轮询策略    配置键-服务名:ribbon:NFLoadBalancerRuleClassName 值就是对应的策略
#service-product:
#  ribbon:
##    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #随机策略
#    #接下来是对请求重试的配置
#    ConnectTimeout: 250 # Ribbon的连接微服务的超时时间
#    ReadTimeout: 1000 # Ribbon的数据读取超时时间
#    OkToRetryOnAllOperations: true # 是否对所有操作都进行重试
#    MaxAutoRetriesNextServer: 1 # 切换微服务实例的重试次数
#    MaxAutoRetries: 1 # 对当前微服务实例的重试次数